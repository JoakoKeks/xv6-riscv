# Sistema de Prioridades en xv6

## Resumen
Se modificó el programador de xv6 (en específico los archivos proc) para incluir un sistema de prioridades. Esta prioridad determina el orden en el que se ejecutan los procesos asignando valores, donde entre menor sea ese valor, mayor será su prioridad. En caso del boost, este se encarga de incrementar y disminuir la prioridad de los procesos


## Archivos modificados/creados:
    - user/prioridades.c
    - kernel/proc.c
    - kernel/proc.h
    - Makefile

## Cambios realizados:
### proc.h:
Dentro de proc.h se agregaron los campos de priority (para prioridad) y boost

### proc.c:
Dentro de proc.c se inicializa la prioridad y boost con valores de 0 y 1 respectivamente
Luego, en la función de scheduler se implementa la lógica del incremento de la prioridad con boost

### prioridades.c:
Se crea el archivo de pruebas el cual hará testeo de nuestras modificaciónes al kernel

### Makefile:
Se agrega nuestro programa a la lista de programas de usuario disponibles del Makefile

## Dificultades
Una de las principales dificultades fue arreglar problemas con el printeo del programa, una vez completado el código a la hora de correrlo este entregaba un print con toda su estructura mezclada, esto probablemente debido a que la forma en la que estaba realizando el código funcionaba de manera "concurrente" y lo terminé cambiando a uno con estructura secuencial, arreglo que terminó por solucionar el problema. Además de esto otra de las dificultades afrontadas fue el ajustar la lógica del boost para evitar que procesos con mayor prioridad fuesen ignorados.